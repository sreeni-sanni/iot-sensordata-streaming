services:
  mongodb:
    image: 'mongo:latest'
    container_name: mongodb
    environment:
      - 'MONGO_INITDB_DATABASE=sensordata'
    ports:
      - "27017:27017"
    networks:
      - kafka_network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "sensordata:1:1"
    networks:
      - kafka_network
    healthcheck:
      test: ["CMD","nc","-z","localhost","9092"]
      interval: 10s
      timeout: 5s
      retries: 3
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
      - kafka_network
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9093 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic sensordata --replication-factor 1 --partitions 1
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9093 --list
      "    

  iot-stream-processor:
    depends_on:
      kafka:
        condition: service_healthy
    build:
      dockerfile: iot-streaming-processor/Dockerfile
      context: .
    container_name: streamprocessor
    ports:
      - 8090:8090
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: sensordata
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    networks:
      - kafka_network
  iot-sensor-data-api:
    build:
      dockerfile: iot-streaming-data-api/Dockerfile
      context: .
    container_name: sendordataapi
    ports:
      - 8080:8080
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: sensordata
    networks:
      - kafka_network
networks:
  kafka_network:
